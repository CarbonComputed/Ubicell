{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"get",
				"get_argument"
			],
			[
				"Us",
				"UserStatus"
			],
			[
				"User",
				"UserName"
			],
			[
				"friend",
				"friend_requesting"
			],
			[
				"De",
				"DEFAULT_SUCCESS"
			],
			[
				"Fre",
				"Friend"
			],
			[
				"fr",
				"friend_username"
			],
			[
				"sat",
				"statusForm"
			],
			[
				"stat",
				"statusForm"
			],
			[
				"fun",
				"function"
			],
			[
				"U",
				"UserName"
			],
			[
				"user",
				"user_actions"
			],
			[
				"is_fri",
				"is_friends_with"
			],
			[
				"Use",
				"UserName"
			],
			[
				"is_",
				"is_final"
			],
			[
				"cur",
				"currentCyl_"
			],
			[
				"cyl",
				"cylinderRequest"
			],
			[
				"in",
				"inUse_"
			],
			[
				"req",
				"reqLock_"
			],
			[
				"sta",
				"statistics_"
			],
			[
				"stats",
				"statistsics_"
			],
			[
				"cy",
				"cylinderRequest"
			],
			[
				"pth",
				"pthread_mutex_unlock"
			],
			[
				"pthread",
				"pthread_mutex_lock"
			],
			[
				"inU",
				"inUseLock_"
			],
			[
				"cross",
				"cross_interval"
			],
			[
				"thre",
				"thread"
			],
			[
				"pthre",
				"pthread_t"
			],
			[
				"to",
				"to_dir_"
			],
			[
				"cro",
				"crossToSouth"
			],
			[
				"app",
				"approach_interval"
			],
			[
				"cros",
				"cross_interval"
			],
			[
				"num",
				"numCars"
			],
			[
				"next",
				"nextCar"
			],
			[
				"uer",
				"userid"
			],
			[
				"USER",
				"UserID"
			],
			[
				"Coo",
				"Cookie"
			],
			[
				"Cookie",
				"CookieVal"
			],
			[
				"use",
				"user_reg"
			],
			[
				"ge",
				"get_user_id"
			],
			[
				"re",
				"req"
			]
		]
	},
	"buffers":
	[
		{
			"file": "templates/login.html",
			"settings":
			{
				"buffer_size": 280,
				"line_ending": "Unix"
			}
		},
		{
			"file": "templates/user.html",
			"settings":
			{
				"buffer_size": 1655,
				"line_ending": "Unix"
			}
		},
		{
			"file": "custom_dec.py",
			"settings":
			{
				"buffer_size": 708,
				"line_ending": "Unix"
			}
		},
		{
			"file": "templates/index.html",
			"settings":
			{
				"buffer_size": 164,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#!/usr/bin/env python\n\nimport logging\nimport tornado.auth\nimport tornado.escape\nimport tornado.ioloop\nimport tornado.options\nimport tornado.web\nimport os.path\nimport uuid\n\nfrom tornado.options import define, options\nfrom tornado import database\n\nfrom constants import *\n\nimport pylibmc\n\nimport auth_actions\nimport user_actions\nimport core_actions\nimport custom_dec\n\ndefine(\"port\", default=8000, help=\"run on the given port\", type=int)\n\n\nclass Application(tornado.web.Application):\n	def __init__(self):\n		handlers = [\n		(r\"/\", MainHandler),\n		(r\"/auth/login\", AuthLoginHandler),\n		(r\"/auth/logout\", AuthLogoutHandler),\n		(r\"/auth/register\",RegisterHandler),\n		(r'/user/([a-z\\d.]{5,})/?',UserHandler),\n		(r'/user/([a-z\\d.]{5,})/friends',UserFriendHandler),\n		(r'/user/([a-z\\d.]{5,})/status',StatusHandler),\n		(r'/user/([a-z\\d.]{5,})/wall',WallHandler),\n		(r'/actions/respond_friend',FriendActionHandler),\n		]\n		settings = dict(\n			cookie_secret=\"p5q5askPJeOhs5mXb3QZ9CrNZUlxRWha6CPXif8G\",\n			login_url=\"/auth/login\",\n			template_path=os.path.join(os.path.dirname(__file__), \"templates\"),\n			static_path=os.path.join(os.path.dirname(__file__), \"static\"),\n			xsrf_cookies=False,\n			autoescape=\"xhtml_escape\",\n			)\n		tornado.web.Application.__init__(self, handlers, **settings)\n		self.db = database.Connection(\"localhost\", \"ProjectTakeOver\",user=\"root\",password=\"\")\n		self.mc = pylibmc.Client([\"127.0.0.1\"], binary=True, behaviors={\"tcp_nodelay\": True,\"ketama\": True})\n\nclass BaseHandler(tornado.web.RequestHandler):\n	@property\n	def db(self):\n		return self.application.db\n\n	@property\n	def mc(self):\n		return self.application.mc\n\n	def get_current_user(self):\n		user_json = self.get_secure_cookie(\"userdata\")\n		if not user_json: return None\n		return tornado.escape.json_decode(user_json)\n\n\nclass MainHandler(BaseHandler):\n	@tornado.web.authenticated\n	def get(self):\n		user = self.get_current_user()\n		self.render(\"index.html\",userdata=user)\n\nclass AuthLoginHandler(BaseHandler):\n    @tornado.web.asynchronous\n    def get(self):\n\n        self.render(\"login.html\")\n\n    def post(self):\n    	username = self.get_argument(\"UserName\",strip = True)\n    	password = self.get_argument(\"Password\",strip = True)\n    	user_cookie = auth_actions.do_login(self.db,username,password)\n    	if not user_cookie:\n            self.redirect(\"/auth/login\")\n            return\n        self.set_secure_cookie(\"user\", tornado.escape.json_encode(user_cookie))\n        user = user_actions.get_my_data(self.db,user_cookie)\n        self.set_secure_cookie(\"userdata\", tornado.escape.json_encode(user))\n        self.redirect(\"/\")\n\n\n\nclass AuthLogoutHandler(BaseHandler):\n	@tornado.web.asynchronous\n	def get(self):\n		self.clear_cookie(\"user\")\n		self.clear_cookie(\"userdata\")\n		self.redirect(\"/\")\n        #self.write(\"You are now logged out\")\n\nclass RegisterHandler(BaseHandler):\n	@tornado.web.asynchronous\n	def get(self):\n		self.render(\"register.html\")\n	def post(self):\n		user = self.request.arguments\n		resp = auth_actions.do_register(self.db,user)\n		print resp\n\n\nclass UserHandler(BaseHandler):\n	@tornado.web.authenticated\n	@tornado.web.addslash\n\n	def get(self,UserName):\n		#check if user can view profile\n		user = self.get_current_user()\n		user2 = user_actions.get_user_data(self.db,UserName)\n		friend = user_actions.is_friends_with(self.db,user['UserID'],UserName)\n		friend_requested = user_actions.is_friend_requested(self.db,user['UserID'],UserName)\n		friend_requesting = user_actions.is_friend_requested(self.db,user['UserID'],UserName)\n		if user2 is None:\n			raise tornado.web.HTTPError(404)\n		user2['UserStatus'] = UserStatus.USER_ACC\n		if UserName == user['UserName']:\n			user2 = user\n			user2['UserStatus'] = UserStatus.USER_ME\n		elif friend is None and friend_requested is None and friend_requesting is None:\n			user2['UserStatus'] = UserStatus.USER_NEI\n		elif friend_requesting != None:\n			user2['UserStatus'] = UserStatus.USER_ACC\n		elif friend_requested != None:\n			user2['UserStatus'] = UserStatus.USER_REQ\n\n\n			#raise tornado.web.HTTPError(403)\n		#get user data\n		#render page\n		self.render(\"user.html\",userdata=user2)\n\nclass UserFriendHandler(UserHandler):\n	@tornado.web.authenticated\n	@custom_dec.auth_friend\n	def get(self,UserName):\n		self.write(UserName + \"hi!\")\n\nclass StatusHandler(BaseHandler):\n	@tornado.web.authenticated\n	def post(self,UserName):\n		user = self.get_current_user()\n		msg = self.get_argument(\"Message\",strip = True)\n		return core_actions.post_wall(self.db,self.mc,user,UserName,msg)\n\nclass WallHandler(BaseHandler):\n	@tornado.web.authenticated\n	@custom_dec.auth_friend\n	def post(self,UserName):\n		user = self.get_current_user()\n		msg = self.get_argument(\"Message\",strip = True)\n		return core_actions.post_wall(self.db,self.mc,user,UserName,msg)\n\nclass FriendActionHandler(BaseHandler):\n	@tornado.web.authenticated\n\n	def post(self):\n		me = self.get_current_user()\n		act = self.get_argument(\"Action\",strip = True)\n		fid = self.get_argument(\"UserID\",strip = True)\n		ustat = self.get_argument(\"UserStatus\",strip = True)\n		print ustat,act\n		resp = RespSuccess.DEFAULT_SUCCESS\n		if ustat == UserStatus.USER_NEI:\n			resp = user_actions.send_friend_request(self.db,me['UserID'],fid)\n		if ustat == UserStatus.USER_REQ:\n			resp = user_actions.send_friend_request(self.db,me['UserID'],fid)\n		else:\n			print 'hello1'\n			raise tornado.web.HTTPError(500)\n		if resp != RespSuccess.DEFAULT_SUCCESS:\n			raise tornado.web.HTTPError(500)\n\n\ndef main():\n    tornado.options.parse_command_line()\n    #self.db = database.Connection(\"localhost\", \"ProjectTakeOver\",user=\"root\",password=\"\")\n    print \"Established Database Connection\"\n    print 'http://127.0.0.1:'+str(options.port)\n    app = Application()\n    app.listen(options.port)\n    tornado.ioloop.IOLoop.instance().start()\n\n\nif __name__ == \"__main__\":\n    main()\n\n\n",
			"file": "uplace.py",
			"file_size": 5781,
			"file_write_time": 1360395224000000,
			"settings":
			{
				"buffer_size": 5799,
				"line_ending": "Unix"
			}
		},
		{
			"file": "user_actions.py",
			"settings":
			{
				"buffer_size": 3602,
				"line_ending": "Unix"
			}
		},
		{
			"file": "constants.py",
			"settings":
			{
				"buffer_size": 319,
				"line_ending": "Unix"
			}
		},
		{
			"file": "core_actions.py",
			"settings":
			{
				"buffer_size": 948,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
		],
		"width": 392.0
	},
	"console":
	{
		"height": 0.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/kmcarbone16/Programming/Major_Projects/uPlace/templates/friend.html",
		"/Users/kmcarbone16/Programming/Major_Projects/uPlace/auth_actions.py",
		"/Users/kmcarbone16/Programming/Major_Projects/uPlace/uplace.py",
		"/Users/kmcarbone16/Programming/Major_Projects/uPlace/templates/user.html",
		"/Users/kmcarbone16/NetBeansProjects/StatisticsManager/StatisticsHandler/src/parser/SMTPLogParser.java",
		"/Users/kmcarbone16/NetBeansProjects/StatisticsManager/StatisticsHandler/src/parser/TomcatLogParser.java",
		"/Users/kmcarbone16/Desktop/test.ncx",
		"/Users/kmcarbone16/Library/Application Support/Sublime Text 2/Packages/Default/Preferences.sublime-settings",
		"/Users/kmcarbone16/Desktop/fuzzer/cross_fuzz_randomized_20110105_seed.html",
		"/Users/kmcarbone16/Desktop/QuoridorProject/StudentEngines/nrr3556/engineData.py",
		"/Users/kmcarbone16/Desktop/sudoku.py",
		"/Users/kmcarbone16/Desktop/QuoridorProject/Model/interface.py",
		"/Users/kmcarbone16/Desktop/QuoridorProject/config.txt",
		"/Users/kmcarbone16/Desktop/QuoridorProject/StudentPlayers/nrr3556/playerData.py",
		"/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/Resources/Extras2.rsrc",
		"/Users/kmcarbone16/Desktop/test.java",
		"/Users/kmcarbone16/Downloads/udt4/app/appclient.cpp",
		"/Users/kmcarbone16/Programming/School/OperatingSystems/Project2/readme.txt",
		"/Users/kmcarbone16/Programming/School/OperatingSystems/Project2/ErieCanalMonitor.h",
		"/Users/kmcarbone16/Programming/School/OperatingSystems/Project2/Erie.cpp",
		"/Users/kmcarbone16/Programming/School/OperatingSystems/Project2/Car.h",
		"/Users/kmcarbone16/Programming/School/OperatingSystems/Project2/main.cpp",
		"/Users/kmcarbone16/Programming/Major_Projects/ProjectTakeOver/static/login.html",
		"/Users/kmcarbone16/Programming/Major_Projects/ProjectTShare/WebServer/tornado-2.3/demos/blog/blog.py",
		"/Users/kmcarbone16/Programming/MultiProjects/RestServer/main.py"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"get_fr",
			"get_friend",
			"get_frie",
			"db",
			"vim",
			"cycles",
			"seed",
			"not",
			"logging",
			"r",
			"THEME",
			"0",
			"get_cu",
			"root"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "templates/login.html",
					"settings":
					{
						"buffer_size": 280,
						"regions":
						{
						},
						"selection":
						[
							[
								6,
								6
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "templates/user.html",
					"settings":
					{
						"buffer_size": 1655,
						"regions":
						{
						},
						"selection":
						[
							[
								1155,
								1155
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "custom_dec.py",
					"settings":
					{
						"buffer_size": 708,
						"regions":
						{
						},
						"selection":
						[
							[
								316,
								316
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "templates/index.html",
					"settings":
					{
						"buffer_size": 164,
						"regions":
						{
						},
						"selection":
						[
							[
								69,
								101
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "uplace.py",
					"settings":
					{
						"buffer_size": 5799,
						"regions":
						{
						},
						"selection":
						[
							[
								5305,
								5305
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 2097.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "user_actions.py",
					"settings":
					{
						"buffer_size": 3602,
						"regions":
						{
						},
						"selection":
						[
							[
								2734,
								2734
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 991.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "constants.py",
					"settings":
					{
						"buffer_size": 319,
						"regions":
						{
						},
						"selection":
						[
							[
								129,
								116
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "core_actions.py",
					"settings":
					{
						"buffer_size": 948,
						"regions":
						{
						},
						"selection":
						[
							[
								649,
								649
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 100.0
	},
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true
}
